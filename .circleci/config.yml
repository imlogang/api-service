version: 2.1
jobs:
  build-image:
    resource_class: large
    machine: 
      image: ubuntu-2204:current
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Docker Build
          command: |
            export CIRCLE_SHA1=$(echo ${CIRCLE_SHA1} | cut -c 1-5)
            docker build --build-arg DOCKER_TAG=$CIRCLE_SHA1 -t imlogang/go-api:$CIRCLE_SHA1 .
      - run: 
          name: Docker Login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Docker Push
          command: |
            export CIRCLE_SHA1=$(echo ${CIRCLE_SHA1} | cut -c 1-5)
            docker push imlogang/go-api:$CIRCLE_SHA1

  deploy-api:
    resource_class: logan/container-runner
    docker:
      - image: cimg/deploy:2025.01.1
    steps:
      - checkout
      - run:
          name: Helm Repo Add
          command: |
            helm repo add go-api-helm https://imlogang.github.io/go-api-helm/
            helm repo update
      - run: 
          name: Helm Upgrade
          command: |
            export CIRCLE_SHA2=$(echo "${CIRCLE_SHA1}" | cut -c 1-5)
            helm upgrade --install --debug go-api-service go-api-helm/go-api --set image.tag=${CIRCLE_SHA2} --set circleci.pipelineId=<< pipeline.id >> --set circleci.workflowId=${CIRCLE_WORKFLOW_ID} --set circleci.jobNumber=${CIRCLE_BUILD_NUM} -n go-api -f values.yaml
      - run: 
          name: Watch release
          command: |
            export CIRCLE_SHA2=$(echo "${CIRCLE_SHA1}" | cut -c 1-5)
            circleci run release plan --environment-name="Microk8s Cluster" --component-name="go-api-service" --target-version="${CIRCLE_SHA2}" --namespace="go-api" go-api-service

  release-go-api-service:
    type: release
    plan_name: go-api-service

  test:
    docker:
      - image: cimg/go:1.24
      - image: postgres:15
        environment:
          POSTGRES_DB: beemoviebot
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
    environment:
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: beemoviebot
    parallelism: 2
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Wait for DB
          command: |
            sudo apt-get update && sudo apt-get install -y postgresql-client
            until pg_isready -h localhost -p 5432; do sleep 1; done
      - run:
          name: run all tests
          command: |
            cd cmd && go list ./...  | circleci tests run --command "xargs gotestsum --junitfile junit.xml --format testname --" --split-by=timings --timings-type=name
      - store_test_results:
          path: cmd/junit.xml
  
  lint:
    docker:
      - image: cimg/go:1.24
    resource_class: medium
    steps:
      - checkout
      - run: 
          name: install golangci-lint
          command: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.5
      - run: 
          name: lint
          command: golangci-lint run
workflows:
  deploy-go-api-service:
    jobs:
      - test
      - lint
      - build-image:
          context: 
            - docker_stuff
          requires:
            - test
            - lint
          filters:
            branches:
              only:
                - main
      - deploy-api:
          requires:
            - build-image
          serial-group: << pipeline.project.slug >>/deploy-group
          filters:
            branches:
              only:
                - main
      - release-go-api-service:
          requires:
            - deploy-api
          filters:
            branches:
              only:
                - main
